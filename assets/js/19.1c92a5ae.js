(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{532:function(e,t,i){"use strict";i.r(t);var o=i(38),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"notebooks"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#notebooks"}},[e._v("#")]),e._v(" Notebooks")]),e._v(" "),i("p",[e._v("We present here a curated list of notebooks recommended to start with scikit-decide, available in the "),i("code",[e._v("notebooks/")]),e._v(" folder of the repository.")]),e._v(" "),i("p"),i("div",{staticClass:"table-of-contents"},[i("ul",[i("li",[i("a",{attrs:{href:"#_03-scheduling-tuto"}},[e._v("03schedulingtuto")])]),i("li",[i("a",{attrs:{href:"#maze-tutorial"}},[e._v("Maze tutorial")])]),i("li",[i("a",{attrs:{href:"#gym-environment-with-scikit-decide-tutorial-continuous-mountain-car"}},[e._v("Gym environment with scikit-decide tutorial: Continuous Mountain Car")])])])]),i("p"),e._v(" "),i("h2",{attrs:{id:"_03-scheduling-tuto"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_03-scheduling-tuto"}},[e._v("#")]),e._v(" 03_scheduling_tuto")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/airbus/scikit-decide/blob/master/notebooks/03_scheduling_tuto.ipynb",target:"_blank",rel:"noopener noreferrer"}},[i("img",{attrs:{src:"https://img.shields.io/badge/see-Github-579aca?logo=github",alt:"Github"}}),i("OutboundLink")],1),e._v(" "),i("a",{attrs:{href:"https://mybinder.org/v2/gh/airbus/scikit-decide/binder?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252Fairbus%252Fscikit-decide%26urlpath%3Dtree%252Fscikit-decide%252Fnotebooks%252F03_scheduling_tuto.ipynb%26branch%3Dmaster",target:"_blank",rel:"noopener noreferrer"}},[i("img",{attrs:{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"}}),i("OutboundLink")],1)]),e._v(" "),i("p",[e._v("The next cell is patching asyncio so that applications using async functions can run in jupyter or any application haviing")]),e._v(" "),i("h2",{attrs:{id:"maze-tutorial"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#maze-tutorial"}},[e._v("#")]),e._v(" Maze tutorial")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/airbus/scikit-decide/blob/master/notebooks/1_maze_tuto.ipynb",target:"_blank",rel:"noopener noreferrer"}},[i("img",{attrs:{src:"https://img.shields.io/badge/see-Github-579aca?logo=github",alt:"Github"}}),i("OutboundLink")],1),e._v(" "),i("a",{attrs:{href:"https://mybinder.org/v2/gh/airbus/scikit-decide/binder?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252Fairbus%252Fscikit-decide%26urlpath%3Dtree%252Fscikit-decide%252Fnotebooks%252F1_maze_tuto.ipynb%26branch%3Dmaster",target:"_blank",rel:"noopener noreferrer"}},[i("img",{attrs:{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"}}),i("OutboundLink")],1)]),e._v(" "),i("p",[e._v("In this tutorial, we tackle the maze problem.\nWe use this classical game to demonstrate how")]),e._v(" "),i("ul",[i("li",[e._v("a new scikit-decide domain can be easily created")]),e._v(" "),i("li",[e._v("to find solvers from scikit-decide hub matching its characteristics")]),e._v(" "),i("li",[e._v("to apply a scikit-decide solver to a domain")]),e._v(" "),i("li",[e._v("to create its own rollout function to play a trained solver on a domain")])]),e._v(" "),i("p",[e._v("Notes:")]),e._v(" "),i("ul",[i("li",[e._v("In order to focus on scikit-decide use, we put some code not directly related to the library in a "),i("a",{attrs:{href:"./maze_utils.py"}},[e._v("separate module")]),e._v(" (like maze generation and display).")]),e._v(" "),i("li",[e._v("A similar maze domain is already defined in "),i("a",{attrs:{href:"https://github.com/airbus/scikit-decide/blob/master/skdecide/hub/domain/maze/maze.py",target:"_blank",rel:"noopener noreferrer"}},[e._v("scikit-decide hub"),i("OutboundLink")],1),e._v(" but we do not use it for the sake of this tutorial.")])]),e._v(" "),i("h2",{attrs:{id:"gym-environment-with-scikit-decide-tutorial-continuous-mountain-car"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#gym-environment-with-scikit-decide-tutorial-continuous-mountain-car"}},[e._v("#")]),e._v(" Gym environment with scikit-decide tutorial: Continuous Mountain Car")]),e._v(" "),i("p",[i("a",{attrs:{href:"https://github.com/airbus/scikit-decide/blob/master/notebooks/2_gym_tuto.ipynb",target:"_blank",rel:"noopener noreferrer"}},[i("img",{attrs:{src:"https://img.shields.io/badge/see-Github-579aca?logo=github",alt:"Github"}}),i("OutboundLink")],1),e._v(" "),i("a",{attrs:{href:"https://mybinder.org/v2/gh/airbus/scikit-decide/binder?urlpath=git-pull%3Frepo%3Dhttps%253A%252F%252Fgithub.com%252Fairbus%252Fscikit-decide%26urlpath%3Dtree%252Fscikit-decide%252Fnotebooks%252F2_gym_tuto.ipynb%26branch%3Dmaster",target:"_blank",rel:"noopener noreferrer"}},[i("img",{attrs:{src:"https://mybinder.org/badge_logo.svg",alt:"Binder"}}),i("OutboundLink")],1)]),e._v(" "),i("p",[e._v("In this notebook we tackle the continuous mountain car problem taken from "),i("a",{attrs:{href:"https://gym.openai.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenAI Gym"),i("OutboundLink")],1),e._v(", a toolkit for developing environments, usually to be solved by Reinforcement Learning (RL) algorithms.")]),e._v(" "),i("p",[e._v("Continuous Mountain Car, a standard testing domain in RL, is a problem in which an under-powered car must drive up a steep hill.")]),e._v(" "),i("div",{attrs:{align:"middle"}},[i("video",{attrs:{controls:"",autoplay:"",preload:"",src:"https://gym.openai.com/videos/2019-10-21--mqt8Qj1mwo/MountainCarContinuous-v0/original.mp4"}})]),e._v(" "),i("p",[e._v("Note that we use here the "),i("em",[e._v("continuous")]),e._v(" version of the mountain car because\nit has a "),i("em",[e._v("shaped")]),e._v(" or "),i("em",[e._v("dense")]),e._v(' reward (i.e. not sparse) which can be used successfully when solving, as opposed to the other "Mountain Car" environments.\nFor reminder, a sparse reward is a reward which is null almost everywhere, whereas a dense or shaped reward has more meaningful values for most transitions.')]),e._v(" "),i("p",[e._v("This problem has been chosen for two reasons:")]),e._v(" "),i("ul",[i("li",[e._v("Show how scikit-decide can be used to solve Gym environments (the de-facto standard in the RL community),")]),e._v(" "),i("li",[e._v("Highlight that by doing so, you will be able to use not only solvers from the RL community (like the ones in "),i("a",{attrs:{href:"https://github.com/DLR-RM/stable-baselines3",target:"_blank",rel:"noopener noreferrer"}},[e._v("stable_baselines3"),i("OutboundLink")],1),e._v(" for example), but also other solvers coming from other communities like genetic programming and planning/search (use of an underlying search graph) that can be very efficient.")])]),e._v(" "),i("p",[e._v("Therefore in this notebook we will go through the following steps:")]),e._v(" "),i("ul",[i("li",[e._v("Wrap a Gym environment in a scikit-decide domain;")]),e._v(" "),i("li",[e._v("Use a classical RL algorithm like PPO to solve our problem;")]),e._v(" "),i("li",[e._v("Give CGP (Cartesian Genetic Programming)  a try on the same problem;")]),e._v(" "),i("li",[e._v("Finally use IW (Iterated Width) coming from the planning community on the same problem.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);